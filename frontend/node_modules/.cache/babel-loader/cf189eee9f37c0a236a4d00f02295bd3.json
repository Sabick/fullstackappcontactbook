{"ast":null,"code":"var _jsxFileName = \"E:\\\\DevOps\\\\Angular\\\\FullStackApplication-main\\\\frontend\\\\src\\\\components\\\\AddContact.js\",\n  _s = $RefreshSig$();\n// src/components/AddContact.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddContact = ({\n  contacts,\n  setContacts\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n    const newContact = {\n      name,\n      email\n    };\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n\n      // Update the state directly without re-fetching from the server\n      setContacts([...contacts, response.data]); // Add the new contact to the state\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AddContact, \"RRZHkkL1zEvDzxfy/n8TaoP+d9E=\");\n_c = AddContact;\nexport default AddContact;\n\n/*// src/components/AddContact.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState(''); // New state for phone\n  const [designation, setDesignation] = useState(''); // New state for designation\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email || !phone || !designation) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email, phone, designation };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setDesignation('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <div>\n          <label>Phone:</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            placeholder=\"Enter phone\"\n          />\n        </div>\n        <div>\n          <label>Designation:</label>\n          <input\n            type=\"text\"\n            value={designation}\n            onChange={(e) => setDesignation(e.target.value)}\n            placeholder=\"Enter designation\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n\n*/\n\n/*  Old code\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\" style={{ backgroundColor: 'blue', color: 'white', padding: '10px' }}>Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n*/\nvar _c;\n$RefreshReg$(_c, \"AddContact\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddContact","contacts","setContacts","_s","name","setName","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","newContact","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["E:/DevOps/Angular/FullStackApplication-main/frontend/src/components/AddContact.js"],"sourcesContent":["// src/components/AddContact.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = ({ contacts, setContacts }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n\n      // Update the state directly without re-fetching from the server\n      setContacts([...contacts, response.data]); // Add the new contact to the state\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n\n\n/*// src/components/AddContact.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState(''); // New state for phone\n  const [designation, setDesignation] = useState(''); // New state for designation\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email || !phone || !designation) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email, phone, designation };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setDesignation('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <div>\n          <label>Phone:</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            placeholder=\"Enter phone\"\n          />\n        </div>\n        <div>\n          <label>Designation:</label>\n          <input\n            type=\"text\"\n            value={designation}\n            onChange={(e) => setDesignation(e.target.value)}\n            placeholder=\"Enter designation\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n\n*/\n\n/*  Old code\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\" style={{ backgroundColor: 'blue', color: 'white', padding: '10px' }}>Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n*/\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACR,IAAI,IAAI,CAACE,KAAK,EAAE;MACnBG,UAAU,CAAC,6BAA6B,CAAC;MACzC;IACF;IAEA,MAAMI,UAAU,GAAG;MAAET,IAAI;MAAEE;IAAM,CAAC;IAElC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,oCAAoC,EAAEF,UAAU,CAAC;MACnFJ,UAAU,CAAC,+BAA+BK,QAAQ,CAACE,IAAI,CAACZ,IAAI,EAAE,CAAC;MAC/DC,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACAL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEa,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,UAAU,CAAC,yCAAyC,CAAC;MACrDS,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA;MAAMyB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BpB,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBxB,OAAA;UACE0B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtB,IAAK;UACZuB,QAAQ,EAAGhB,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UACzCG,WAAW,EAAC;QAAY;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxB,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBxB,OAAA;UACE0B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEpB,KAAM;UACbqB,QAAQ,EAAGhB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UAC1CG,WAAW,EAAC;QAAa;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAENf,OAAO,iBAAIT,OAAA;MAAAoB,QAAA,EAAIX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1DIH,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA4DhB,eAAeA,UAAU;;AAGzignoreList":[]},"metadata":{},"sourceType":"module"}