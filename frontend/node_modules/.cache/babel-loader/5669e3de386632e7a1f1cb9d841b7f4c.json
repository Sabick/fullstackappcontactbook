{"ast":null,"code":"var _jsxFileName = \"E:\\\\DevOps\\\\Angular\\\\FullStackApplication-main\\\\frontend\\\\src\\\\components\\\\AddContact.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AddContact.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddContact = ({\n  onContactAdded\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!name || !email || !phone || !designation) {\n      setMessage('All fields are required!');\n      return;\n    }\n    const newContact = {\n      name,\n      email,\n      phone,\n      designation\n    };\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added: ${response.data.name}`);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setDesignation('');\n      onContactAdded(); // Refresh list\n    } catch (error) {\n      setMessage('Error adding contact.');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone\",\n        value: phone,\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Designation\",\n        value: designation,\n        onChange: e => setDesignation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AddContact, \"sD3tijJ9WZo1g5zVQkR7aRkJPbM=\");\n_c = AddContact;\nexport default AddContact;\n\n/*\n// src/components/AddContact.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = ({ contacts, setContacts }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n\n      // Update the state directly without re-fetching from the server\n      setContacts([...contacts, response.data]); // Add the new contact to the state\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n*/\n\n/*// src/components/AddContact.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState(''); // New state for phone\n  const [designation, setDesignation] = useState(''); // New state for designation\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email || !phone || !designation) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email, phone, designation };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setDesignation('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <div>\n          <label>Phone:</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            placeholder=\"Enter phone\"\n          />\n        </div>\n        <div>\n          <label>Designation:</label>\n          <input\n            type=\"text\"\n            value={designation}\n            onChange={(e) => setDesignation(e.target.value)}\n            placeholder=\"Enter designation\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n\n*/\n\n/*  Old code\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\" style={{ backgroundColor: 'blue', color: 'white', padding: '10px' }}>Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n*/\nvar _c;\n$RefreshReg$(_c, \"AddContact\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddContact","onContactAdded","_s","name","setName","email","setEmail","phone","setPhone","designation","setDesignation","message","setMessage","handleSubmit","e","preventDefault","newContact","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/DevOps/Angular/FullStackApplication-main/frontend/src/components/AddContact.js"],"sourcesContent":["// frontend/src/components/AddContact.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = ({ onContactAdded }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!name || !email || !phone || !designation) {\n      setMessage('All fields are required!');\n      return;\n    }\n\n    const newContact = { name, email, phone, designation };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added: ${response.data.name}`);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setDesignation('');\n      onContactAdded(); // Refresh list\n    } catch (error) {\n      setMessage('Error adding contact.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"text\" placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n        <input type=\"text\" placeholder=\"Designation\" value={designation} onChange={(e) => setDesignation(e.target.value)} />\n        <button type=\"submit\">Add Contact</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n\n\n/*\n// src/components/AddContact.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = ({ contacts, setContacts }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n\n      // Update the state directly without re-fetching from the server\n      setContacts([...contacts, response.data]); // Add the new contact to the state\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n*/\n\n/*// src/components/AddContact.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState(''); // New state for phone\n  const [designation, setDesignation] = useState(''); // New state for designation\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email || !phone || !designation) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email, phone, designation };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n      setPhone('');\n      setDesignation('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <div>\n          <label>Phone:</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            placeholder=\"Enter phone\"\n          />\n        </div>\n        <div>\n          <label>Designation:</label>\n          <input\n            type=\"text\"\n            value={designation}\n            onChange={(e) => setDesignation(e.target.value)}\n            placeholder=\"Enter designation\"\n          />\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n\n*/\n\n/*  Old code\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validation check\n    if (!name || !email) {\n      setMessage('Please fill out all fields.');\n      return;\n    }\n\n    const newContact = { name, email };\n\n    try {\n      const response = await axios.post('http://localhost:3002/api/contacts', newContact);\n      setMessage(`Contact added successfully: ${response.data.name}`);\n      setName('');\n      setEmail('');\n    } catch (error) {\n      setMessage('Error adding contact. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add New Contact</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter name\"\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter email\"\n          />\n        </div>\n        <button type=\"submit\" style={{ backgroundColor: 'blue', color: 'white', padding: '10px' }}>Add Contact</button>\n      </form>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default AddContact;\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}